name: CI/CD

on:
  push:
    branches:
      - main
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: windows-latest
            platform: x86
            runtimeIdentifier: win-x32
          - os: windows-latest
            platform: x64
            runtimeIdentifier: win-x64
          - os: windows-latest
            platform: ARM64
            runtimeIdentifier: win-arm64
          - os: ubuntu-latest
            platform: x86
            runtimeIdentifier: linux-x86
          - os: ubuntu-latest
            platform: x64
            runtimeIdentifier: linux-x64
          - os: ubuntu-latest
            platform: ARM32
            runtimeIdentifier: linux-arm
          - os: ubuntu-latest
            platform: ARM64
            runtimeIdentifier: linux-arm64
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '9.0.x'

      - name: Restore NuGet packages
        run: dotnet restore "Nucleares Web Forwarder.sln"

      - name: Publish single-file, self-contained, ready-to-run, and AOT for ${{ matrix.platform }}
        run: |
          dotnet publish "Nucleares Web Forwarder.csproj" -c Release -r ${{ matrix.runtimeIdentifier }} --self-contained true \
            /p:PublishSingleFile=true \
            /p:PublishTrimmed=true \
            /p:PublishReadyToRun=true \
            /p:PublishAot=true \
            -o build/${{ matrix.platform }}

      - name: Upload build artifact for ${{ matrix.platform }}
        uses: actions/upload-artifact@v4
        with:
          name: build-${{ matrix.platform }}
          path: build/${{ matrix.platform }}/*

  release:
    name: Create Release and Upload Assets
    if: startsWith(github.ref, 'refs/tags/')
    needs: build
    runs-on: windows-latest
    steps:
      - name: Download all build artifacts
        uses: actions/download-artifact@v3
        with:
          path: build_artifacts

      - name: Zip build artifacts
        run: |
          powershell -Command "Compress-Archive -Path 'build_artifacts\*' -DestinationPath release.zip"

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: "Automated release for tag ${{ github.ref }}"
          draft: false
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: release.zip
          asset_name: NuclearesWebForwarder.zip
          asset_content_type: application/zip
